{"ast":null,"code":"var _jsxFileName = \"/Users/kanhaiyasuthar/Desktop/js/Aartas/chatapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const socket = io('http://localhost:8000');\n\n    // Listen for incoming messages\n    socket.on('chat message', msg => {\n      setMessages([...messages, msg]);\n    });\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [messages]);\n  const sendMessage = () => {\n    // Emit the message to the server\n    socket.emit('chat message', message);\n    console.log(\"completed\");\n    // Clear the input field\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9iyGj6dRHK6V1mxAAjlNUec9m4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","messages","setMessages","message","setMessage","socket","on","msg","console","log","disconnect","sendMessage","emit","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/kanhaiyasuthar/Desktop/js/Aartas/chatapp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\nconst socket = io('http://localhost:8000');\n\n    // Listen for incoming messages\n    socket.on('chat message', (msg) => {\n      setMessages([...messages, msg]);\n    });\n    socket.on('connect', () => {\n      console.log('Connected to server');\n  });\n\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [messages]);\n\n  const sendMessage = () => {\n    // Emit the message to the server\n    socket.emit('chat message', message);\n    console.log(\"completed\")\n    // Clear the input field\n    setMessage('');\n  };\n\n  return (\n    <div>\n      <ul>\n        {messages.map((msg, index) => (\n          <li key={index}>{msg}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IAClB,MAAMU,MAAM,GAAGT,EAAE,CAAC,uBAAuB,CAAC;;IAEtC;IACAS,MAAM,CAACC,EAAE,CAAC,cAAc,EAAGC,GAAG,IAAK;MACjCL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,GAAG,CAAC,CAAC;IACjC,CAAC,CAAC;IACFF,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC,CAAC,CAAC;;IAGA;IACA,OAAO,MAAM;MACXJ,MAAM,CAACK,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAN,MAAM,CAACO,IAAI,CAAC,cAAc,EAAET,OAAO,CAAC;IACpCK,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB;IACAL,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACa,GAAG,CAAC,CAACP,GAAG,EAAEQ,KAAK,kBACvBjB,OAAA;QAAAe,QAAA,EAAiBN;MAAG,GAAXQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,OAAQ;MACfmB,QAAQ,EAAGC,CAAC,IAAKnB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAQ2B,OAAO,EAAEd,WAAY;MAAAE,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACnB,EAAA,CA7CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}